api -> application prog interface

--> 2 

rest api --> json, protocol free
soap api --> xml,  protocol based

get post

request method
get --> read
post --> create
put --> update
delete --> delete
patch --> partial update


var users = [
    {
        name:"abc",
        age:20
    },{
        name:"xyz",
        age:30
    }
]
app.get("/test",(req,res)=>{
    console.log("test api called");
    res.send("test api called");
})

app.get("/test1",(req,res)=>{
    res.json({
        message:"ok",
        
    })
})

app.get("/test2",(req,res)=>{
    res.status(201).json({
        message:"data fetched successfully",
        data:users
    })
})
//localhost:3000/test3/101
app.get("/test3/:id",(req,res)=>{

    var id = req.params.id;
    console.log("id is",id);
    res.status(201).json({
        message:"data fetched successfully",
        id:id
    })
    
})

app.get("/users",(req,res)=>{

    //users.find()
    userSchema.find({name:"jay"}).then((data)=>{

        res.status(200).json({
            users:data,
            message:"data fetched successfully"
        })

    }).catch((err)=>{

        res.status(500).json({
            message:"error",
            error:err
        })

    })

})
